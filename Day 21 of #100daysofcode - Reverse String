Problem : Write a function that reverses a string. The input string is given as an array of characters s.
          You must do this by modifying the input array in-place with O(1) extra memory.
          
EXPLANATION :  I solve this question using two pointer approach .  the start pointer pointing 0 index and end pointing the last index in a string s . 
               while (start<end )-> then i swap s[start] and s[end].
          
Example 1:

Input: s = ["h","e","l","l","o"]
Output: ["o","l","l","e","h"]

Example 2:

Input: s = ["H","a","n","n","a","h"]
Output: ["h","a","n","n","a","H"]    

Constraints:

1 <= s.length <= 105
s[i] is a printable ascii character.


CODE:
class Solution {
public:

    void reverseString(vector<char>& s) {
        int start = 0 ;
        int end = s.size()-1;
        while(start<end){
            swap(s[start++],s[end--]);
        }
    }
};


CODE(VSCODE):


#include<iostream>
using namespace std;
int getLength(char name[]){
    int count = 0;
    for(int i=0; name[i]!='\0';i++){
        count++;
    }
    return count;

}
void reverseString(char name[]){
    int s = 0;
    int e = getLength(name)-1;
    while(s<e){
        swap(name[s++],name[e--]);
    }
    
}
int main(){
    char name[20];                     //->string ke end ko represent krne ke lie null \0 stoew hota hai
    cout<<"enter your name  = ";
    cin>>name;
    cout<<endl;
    cout<<"your name is "<<name<<endl;

    cout<<"length of name = "<<getLength(name)<<endl;

    reverseString(name);
    cout<<"after reverse = "<<name ;


    return 0;
}
