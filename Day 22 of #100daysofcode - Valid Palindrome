PROBLEM :      A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.
               Given a string s, return true if it is a palindrome, or false otherwise.
          
EXPLANATION :  bool isValid(char ch)      -->>  function for cheecking that element is Alphanumeric characters or not : if true -> return 1    else -> return 0
               char toLowerCase(char ch)  -->>  function to convert the elements into lowercase ->> if already in lower case or a number -> return same value 
                                                 //else ->> convert into lowercase and then return.
                                                 
               bool palindrome(string temp) -->> function to check palindrome -> use 2 pointer approach here and comparere the elements . the first pointer is 
                                                at the 1st index and the second pointer is at last index .  then compare the elements until (1st pointer greater 
                                                than last pointer ). if anywhere we found that elements are not equal then return 0 from there                                
          
Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.  


CODE(LEETCODE):
class Solution {
//function for cheecking that element is Alphanumeric characters or not : if true -> return 1    else -> return 0

    bool isValid(char ch){
        if((ch>='A'&& ch<='Z')||(ch>='a'&& ch<='z')||(ch>='0'&& ch<='9')){
            return 1 ;
        }
        return 0;
    }
    
// function to convert the elements into lowercase ->> if already in lower case or a number -> return same value 
//else ->> convert into lowercase and then return


    char toLowerCase(char ch){
        if((ch>='a'&& ch<='z')||(ch>='0'&& ch<='9')){
            return ch;
        }
        else{
            char ans = ch -'A' +'a';
            return ans;
        }
        
    }

// fonction to check palindrome -> use 2 pointer approach here and comparere the elements . the first pointer is at the 1st index and the second pointer is at last index .  then compare the elements until (1st pointer greater than last pointer ). if anywhere we found that elements are not equal then return 0 from there 

    bool palindrome(string temp){
        int start = 0;
        int end = temp.length() -1;
        while(start<=end){
            if(temp[start] !=temp[end]){
                return 0;
            }
            else{
                start++;
                end--;
            }
        }
        return 1;
    }

public:
    bool isPalindrome(string s) {

        //removing all non-alphanumeric characters
        string temp ="";

        for(int j =0 ; j<s.length();j++){
            if(isValid(s[j])){
                temp.push_back(s[j]);
            }
        }
        //converting to lowercase
        for(int i =0; i<temp.length();i++){
            temp[i] = toLowerCase(temp[i]);
        }
        return palindrome(temp);
    }
};

CODE (VS CODE):

#include<iostream>
using namespace std;


bool isValid(char ch){
        if((ch>='A'&& ch<='Z')||(ch>='a'&& ch<='z')||(ch>='0'&& ch<='9')){
            return 1 ;
        }
        return 0;
    }

    char toLowerCase(char ch){
        if((ch>='a'&& ch<='z')||(ch>='0'&& ch<='9')){
            return ch;
        }
        else{
            char ans = ch - 'A'+'a';
            return ans;
        }
        
    }
    bool palindrome(string temp){
        int start = 0;
        int end = temp.length() -1;
        while(start<=end){
            if(temp[start] !=temp[end]){
                return 0;
            }
            else{
                start++;
                end--;
            }
        }
        return 1;
    }
    bool isPalindrome(string s) {

        //removing all non-alphanumeric characters
        string temp ="";

        for(int j =0 ; j<s.length();j++){
            if(isValid(s[j])){
                temp.push_back(s[j]);
            }
        }
       
        //converting to lowercase
        for(int i =0; i<temp.length();i++){
            temp[i] = toLowerCase(temp[i]);
        }
        return palindrome(temp);
    }

int main(){

    string s = "A man, a plan, a canal: Panama";
     int ans = isPalindrome(s);
     if(ans){
        cout<<"string is palindrome "<<endl;
     }
     else{
        cout<<"string is not palindrome "<<endl;
     }

}








