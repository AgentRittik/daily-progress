PROBLEM : Given an array, rotate the array to the right by k steps, where k is non-negative.

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]
Example 2:

Input: nums = [-1,-100,3,99], k = 2
Output: [3,99,-1,-100]
Explanation: 
rotate 1 steps to the right: [99,-1,-100,3]
rotate 2 steps to the right: [3,99,-1,-100]


Constraints:

1 <= nums.length <= 105
-231 <= nums[i] <= 231 - 1
0 <= k <= 105



LEETCODE SOLUTION : 

class Solution {
public:
    void rotate(vector<int>& nums, int k) {
        vector<int>temp(nums.size());
        for(int i =0; i<nums.size() ; i++){
            temp[(i+k)% nums.size()] = nums[i];
        }
        nums = temp;
    }
};


FULL VS CODE SOLUTION : 

#include<iostream>
#include<vector>
using namespace std;

int  rotate(vector<int>& nums, int k) {
        vector<int>temp(nums.size());
        for(int i =0; i<nums.size() ; i++){
            temp[(i+k)% nums.size()] = nums[i];
        }
        nums = temp;
        
    }

    int main(){

        int n ;
        cout<<"enter the how many elements you wants to enter = ";
        cin>>n;
        cout<<endl;
        vector<int>x ;

        //taking the elements from user 
        for(int i =0; i<n;i++){
            int a;
            int y = i+1;
            cout<<"enter "<< y<<" element = "<<endl;
            cin>>a;
            x.push_back(a);
        }

        int k; 
        cout<<"enter from how manyb places you want to rotate  = ";
        cin>>k;
        cout<<endl;

        rotate(x,k);

        cout<<"printing the rotated array"<<endl;

        for(int i :x){
            cout<<i<<" ";
        }

        return 0;
         
    }



 
