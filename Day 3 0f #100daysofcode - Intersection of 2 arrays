Problem :1 

You are given two arrays 'A' and 'B' of size 'N' and 'M' respectively. both these arrays are sorted 
in non - decreasing order . you have to find the intersection of these two arrays .

1st Method : optimized solution 

#include <bits/stdc++.h> 
vector<int> findArrayIntersection(vector<int> &arr1, int n, vector<int> &arr2, int m)
{
	// Write your code here.
    int i= 0,j=0;
    vector<int>ans;
    while(i<n && j<m){
        if (arr1[i]==arr2[j]){
        ans.push_back(arr1[i]);
        i++; 
        j++;
      }
        else if(arr1[i]<arr2[j]){
        i++;
      }
        else if(arr1[i]>arr2[j]){
        j++;
      }
    }
    
    return ans ;


Method 2 : brute force 

#include <iostream>
using namespace std;

int intersectionOfarray(int arr1[] ,int n1,int arr2[] , int n2){
     int ans[10];
     int z =0;
    for (int  i = 0; i<n1 ;i++){
        for(int j = 0; j<n2 ; j++){
            if (arr1[i] == arr2[j]){
                ans[z] = arr1[i];
                z++;
                arr2[j] = 99999;
                break ; 
            }
        }
    }
    cout<<"result of intersection of 2 arrays =  ";
     for (int  i = 0; i<z ;i++){
            cout<<ans[i]<<" ";
        }
        return 0;
}


int main() {
    
    int a1[9] = {1,2,2,2,3,4,5,7,8};
    cout << "array 1 = ";
    for (int  i = 0; i<9 ;i++){
            cout<<a1[i]<<" ";
        }
        cout<<endl; 
    int b1[6] = {2,2,3,10,5,13};
    cout << "array 2 = ";
    for (int  i = 0; i<6 ;i++){
            cout<<b1[i]<<" ";
        }
        cout<<endl;
    
  intersectionOfarray(a1 , 9, b1 ,6);
    
   

    return 0;
}


