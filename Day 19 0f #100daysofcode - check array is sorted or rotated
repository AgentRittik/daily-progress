PROBLEM: Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.
         There may be duplicates in the original array.
         
Example 1:

Input: nums = [3,4,5,1,2]
Output: true
Explanation: [1,2,3,4,5] is the original sorted array.
You can rotate the array by x = 3 positions to begin on the the element of value 3: [3,4,5,1,2]

Example 2:

Input: nums = [2,1,3,4]
Output: false
Explanation: There is no sorted array once rotated that can make nums.
Example 3:

Input: nums = [1,2,3]
Output: true
Explanation: [1,2,3] is the original sorted array.
You can rotate the array by x = 0 positions (i.e. no rotation) to make nums.
 
 CODE (LEETCODE) :
 class Solution {
public:
    bool check(vector<int>& nums) {
        int count =0;
        int n = nums.size();
        for(int i =1;i<n;i++){
            if(nums[i-1]>nums[i]){
                count++;
            }
        }
        if(nums[n-1]>nums[0]){
            count++;
        }
        if (count<=1)
            return true;
        else
        return false;

    }
};


CODE(VS-CODE):


#include<iostream>
#include<vector>
using namespace std;
 
 bool check(vector<int>& nums) {
        int count =0;
        for(int i =1 ;i<nums.size();i++){      //i-> 1 i will be start from 1   
            if(nums[i-1]>nums[i]){             //because if i start i with zero and i do i+1 int this case when i reach n-1 element
                count++;                       // then i not able to find i+1 -> because there is no element , and in loop i will go upto                 
            }                                 //  n . so at last condition i will not able to find the i+1 element      
        }
        if(nums[nums.size()-1]>nums[0]){
            count++;
        }
        if(count<=1)
            return true;
        else
        return false;
    }

 int main(){
    vector<int> nums;
     int n ;
     cout<<"enter the how many elements you wants to enter = ";
     cin>>n;
     cout<<endl;
    // taking the input of array
    for(int i =0; i<n;i++){
         int a;
         int y = i+1;
         cout<<"enter "<< y<<" element = "<<endl;
         cin>>a;
        nums.push_back(a);
        }

        cout<<"answer = "<<check(nums);


}
 
