what is mountain array ?

An array arr a mountain if the following properties hold:

arr.length >= 3
There exists some i with 0 < i < arr.length - 1 such that:
arr[0] < arr[1] < ... < arr[i - 1] < arr[i] 
arr[i] > arr[i + 1] > ... > arr[arr.length - 1]


PROBLEM : Given a mountain array arr, return the index i such that arr[0] < arr[1] < ... < arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].
          You must solve it in O(log(arr.length)) time complexity.
          
Constraints:

3 <= arr.length <= (10 power 5) 
0 <= arr[i] <= (10 power 6)
arr is guaranteed to be a mountain array.          

Input: int arr[]  = {14,82,89,84,79,70,70,68,67,66,63,60,58,54,44,43,32,28,26,25,22,15,13,12,10,8,7,5,4,3};

Output: 2

Input: arr = [0,1,0]
Output: 1

Input: arr = [0,2,1,0]
Output: 1

Input: arr = [0,10,5,2]
Output: 1


CODE : 

#include<iostream>
using namespace std;

int peekMountain(int arr[], int n){
    int s = 0 ; 
    int e = n-1;
    int mid  = s + (e-s)/2;

    while (s < e){

        if (arr[mid] < arr[mid+1]){
            s = mid +1;
        }
        else {
            e = mid;
        }
        mid  = s + (e-s)/2;
    }
    return mid ; 

}

int main(){

    int n; 
    cout<<"enter the length of array ";
    cin>>n;

    int arr[n];
    cout << "entered array should be mountain array "<<endl;
    for(int i=0;i<n;i++) {
        cout<<"enter  the element of for "<<" "<<i<<" index = ";
        cin>> arr[i];
        cout<<endl;
    }

    int a  = peekMountain(arr ,n);


    cout <<"the peek element in array is "<<" " <<arr[a]<<" "<<"and it is present at index "<<a << endl;

return 0;

}
